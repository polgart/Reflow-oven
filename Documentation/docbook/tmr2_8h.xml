<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_tmr2_8h" xml:lang="en-US">
<title>C:/Users/EDU_OBOS_5057/Documents/Reflow oven/Design/SW/RO_firmware_v1.X/mcc_generated_files/tmr2.h File Reference</title>
<indexterm><primary>C:/Users/EDU_OBOS_5057/Documents/Reflow oven/Design/SW/RO_firmware_v1.X/mcc_generated_files/tmr2.h</primary></indexterm>
<programlisting>#include &lt;xc.h&gt;
#include &lt;stdint.h&gt;
#include &lt;stdbool.h&gt;
</programlisting>Include dependency graph for tmr2.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="tmr2_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="tmr2_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_tmr2_8h_1a6ed84e6ce1e925b8397ca4cd995dc486">TMR2_INTERRUPT_TICKER_FACTOR</link>   1</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_tmr2_8h_1a46c13c9255379e99c10240229a145d37">TMR2_Initialize</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_tmr2_8h_1a029b45c0db9f00c1e569879790b617c9">TMR2_Period16BitSet</link> (uint16_t value)</para>
</listitem>
            <listitem><para>uint16_t <link linkend="_tmr2_8h_1ae0659f551ba74dfbbe77b676fe368103">TMR2_Period16BitGet</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_tmr2_8h_1aa7921f4935894ed5a4f643cc531c54a6">TMR2_Counter16BitSet</link> (uint16_t value)</para>
</listitem>
            <listitem><para>uint16_t <link linkend="_tmr2_8h_1aadc6b4b53f1bbde0bf8cadd351d7f8b5">TMR2_Counter16BitGet</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_tmr2_8h_1a96213f388ab9dc5b3cd3ff3b06732b59">TMR2_SetInterruptHandler</link> (void(*InterruptHandler)(void))</para>
</listitem>
            <listitem><para>void <link linkend="_tmr2_8h_1a7eccfd0fac278e0099d27631e116cfbf">TMR2_Start</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_tmr2_8h_1a90159f110263038f478f43a3ac9ab3ee">TMR2_Stop</link> (void)</para>
</listitem>
            <listitem><para>bool <link linkend="_tmr2_8h_1af78ac8c3a760ed1dc1768c090b3fe952">TMR2_GetElapsedThenClear</link> (void)</para>
</listitem>
            <listitem><para>int <link linkend="_tmr2_8h_1a241db09d6e4141c5ef4a8b6bea8b22ad">TMR2_SoftwareCounterGet</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_tmr2_8h_1a7f4921638056d85138f0a7a743b44ef9">TMR2_SoftwareCounterClear</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_tmr2_8h_1a6ed84e6ce1e925b8397ca4cd995dc486"/>    <section>
    <title>TMR2_INTERRUPT_TICKER_FACTOR</title>
<indexterm><primary>TMR2_INTERRUPT_TICKER_FACTOR</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_INTERRUPT_TICKER_FACTOR</secondary></indexterm>
<para><computeroutput>#define TMR2_INTERRUPT_TICKER_FACTOR   1</computeroutput></para>
<para>TMR2 Generated Driver API Header File</para>

<para>@Company Microchip Technology Inc.</para>

<para>@File Name <link linkend="_tmr2_8h">tmr2.h</link></para>

<para>@Summary This is the generated header file for the TMR2 driver using PIC24 / dsPIC33 / PIC32MM MCUs</para>

<para>@Description This header file provides APIs for driver for TMR2. Generation Information : Product Revision : PIC24 / dsPIC33 / PIC32MM MCUs - 1.170.0 Device : PIC24FJ256GA702 The generated drivers are tested against the following: Compiler : XC16 v1.61 MPLAB : MPLAB X v5.45 Section: Included Files </para>
<para>
Definition at line 62 of file tmr2.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_tmr2_8h_1aadc6b4b53f1bbde0bf8cadd351d7f8b5"/>    <section>
    <title>TMR2_Counter16BitGet()</title>
<indexterm><primary>TMR2_Counter16BitGet</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_Counter16BitGet</secondary></indexterm>
<para><computeroutput>uint16_t TMR2_Counter16BitGet (void )</computeroutput></para>
<para>@Summary Provides 16-bit current counter value</para>

<para>@Description This routine provides 16-bit current counter value</para>

<para>@Param None.</para>

<para>@Returns 16-bit current counter value</para>

<para>@Example Refer to the example of <link linkend="_tmr2_8h_1aa7921f4935894ed5a4f643cc531c54a6">TMR2_Counter16BitSet()</link>; </para>
<para>
Definition at line 154 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1aa7921f4935894ed5a4f643cc531c54a6"/>    <section>
    <title>TMR2_Counter16BitSet()</title>
<indexterm><primary>TMR2_Counter16BitSet</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_Counter16BitSet</secondary></indexterm>
<para><computeroutput>void TMR2_Counter16BitSet (uint16_t value)</computeroutput></para>
<para>@Summary Updates the timer&apos;s 16-bit value</para>

<para>@Description This routine updates the timer&apos;s 16-bit value</para>

<para>@Param None.</para>

<para>@Returns None</para>

<para>@Example <computeroutput> uint16_t value=0xF0F0;</computeroutput></para>

<para><computeroutput> TMR2_Counter16BitSet(value));</computeroutput></para>

<para><computeroutput> while(1) { TMR2_Tasks(); if( (value == <link linkend="_tmr2_8h_1aadc6b4b53f1bbde0bf8cadd351d7f8b5">TMR2_Counter16BitGet()</link>)) { <link linkend="_tmr2_8h_1a90159f110263038f478f43a3ac9ab3ee">TMR2_Stop()</link>; } } </computeroutput> </para>
<para>
Definition at line 146 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1af78ac8c3a760ed1dc1768c090b3fe952"/>    <section>
    <title>TMR2_GetElapsedThenClear()</title>
<indexterm><primary>TMR2_GetElapsedThenClear</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_GetElapsedThenClear</secondary></indexterm>
<para><computeroutput>bool TMR2_GetElapsedThenClear (void )</computeroutput></para>
<para>@Summary Returns the elapsed status of the timer and clears if flag is set.</para>

<para>@Description This routine returns the elapsed status of the timer and clears flag if its set.</para>

<para>@Param None.</para>

<para>@Returns True - Timer has elapsed. False - Timer has not elapsed.</para>

<para>@Example Refer to the example of <link linkend="_tmr2_8h_1a46c13c9255379e99c10240229a145d37">TMR2_Initialize()</link>; </para>
<para>
Definition at line 193 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1a46c13c9255379e99c10240229a145d37"/>    <section>
    <title>TMR2_Initialize()</title>
<indexterm><primary>TMR2_Initialize</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_Initialize</secondary></indexterm>
<para><computeroutput>void TMR2_Initialize (void )</computeroutput></para>
<para>Section: Interface Routines @Summary Initializes hardware and data for the given instance of the TMR module</para>

<para>@Description This routine initializes hardware for the instance of the TMR module, using the hardware initialization given data. It also initializes all necessary internal data.</para>

<para>@Param None.</para>

<para>@Returns None</para>

<para>@Example <computeroutput> bool statusTimer1; uint16_t period; uint16_t value;</computeroutput></para>

<para><computeroutput> period = 0x20;</computeroutput></para>

<para><computeroutput> <link linkend="_tmr2_8c_1a46c13c9255379e99c10240229a145d37">TMR2_Initialize()</link>;</computeroutput></para>

<para><computeroutput> TMR2_Period16BitSet(period);</computeroutput></para>

<para><computeroutput> if((value = <link linkend="_tmr2_8c_1ae0659f551ba74dfbbe77b676fe368103">TMR2_Period16BitGet()</link>)== period) { <link linkend="_tmr2_8c_1a7eccfd0fac278e0099d27631e116cfbf">TMR2_Start()</link>; }</computeroutput></para>

<para><computeroutput> while(1) { TMR2_Tasks(); if( (statusTimer1 = <link linkend="_tmr2_8c_1af78ac8c3a760ed1dc1768c090b3fe952">TMR2_GetElapsedThenClear()</link>) == true) { <link linkend="_tmr2_8c_1a90159f110263038f478f43a3ac9ab3ee">TMR2_Stop()</link>; } } </computeroutput></para>

<para>Section: Driver Interface </para>
<para>
Definition at line 91 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1ae0659f551ba74dfbbe77b676fe368103"/>    <section>
    <title>TMR2_Period16BitGet()</title>
<indexterm><primary>TMR2_Period16BitGet</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_Period16BitGet</secondary></indexterm>
<para><computeroutput>uint16_t TMR2_Period16BitGet (void )</computeroutput></para>
<para>@Summary Provides the timer 16-bit period value</para>

<para>@Description This routine provides the timer 16-bit period value</para>

<para>@Param None.</para>

<para>@Returns Timer 16-bit period value</para>

<para>@Example Refer to the example of <link linkend="_tmr2_8h_1a46c13c9255379e99c10240229a145d37">TMR2_Initialize()</link>; </para>
<para>
Definition at line 141 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1a029b45c0db9f00c1e569879790b617c9"/>    <section>
    <title>TMR2_Period16BitSet()</title>
<indexterm><primary>TMR2_Period16BitSet</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_Period16BitSet</secondary></indexterm>
<para><computeroutput>void TMR2_Period16BitSet (uint16_t value)</computeroutput></para>
<para>@Summary Updates 16-bit timer value</para>

<para>@Description This routine updates 16-bit timer value</para>

<para>@Param None.</para>

<para>@Returns None</para>

<para>@Example Refer to the example of <link linkend="_tmr2_8h_1a46c13c9255379e99c10240229a145d37">TMR2_Initialize()</link>; </para>
<para>
Definition at line 133 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1a96213f388ab9dc5b3cd3ff3b06732b59"/>    <section>
    <title>TMR2_SetInterruptHandler()</title>
<indexterm><primary>TMR2_SetInterruptHandler</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_SetInterruptHandler</secondary></indexterm>
<para><computeroutput>void TMR2_SetInterruptHandler (void(*)(void) InterruptHandler)</computeroutput></para>
<para>@Summary Assigns a function pointer with a callback address.</para>

<para>@Description This routine assigns a function pointer with a callback address.</para>

<para>@Param Address of the callback routine.</para>

<para>@Returns None</para>

<para>@Example <computeroutput> TMR2_SetInterruptHandler(&amp;TMR2_CallBack); </computeroutput> </para>
<para>
Definition at line 165 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1a7f4921638056d85138f0a7a743b44ef9"/>    <section>
    <title>TMR2_SoftwareCounterClear()</title>
<indexterm><primary>TMR2_SoftwareCounterClear</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_SoftwareCounterClear</secondary></indexterm>
<para><computeroutput>void TMR2_SoftwareCounterClear (void )</computeroutput></para>
<para>@Summary Clears the software counter value.</para>

<para>@Description This routine clears the software counter value.</para>

<para>@Param None.</para>

<para>@Returns None</para>

<para>@Example Refer to the example of <link linkend="_tmr2_8h_1a46c13c9255379e99c10240229a145d37">TMR2_Initialize()</link>; </para>
<para>
Definition at line 211 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1a241db09d6e4141c5ef4a8b6bea8b22ad"/>    <section>
    <title>TMR2_SoftwareCounterGet()</title>
<indexterm><primary>TMR2_SoftwareCounterGet</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_SoftwareCounterGet</secondary></indexterm>
<para><computeroutput>int TMR2_SoftwareCounterGet (void )</computeroutput></para>
<para>@Summary Returns the software counter value.</para>

<para>@Description This routine returns the software counter value.</para>

<para>@Param None.</para>

<para>@Returns Software counter value.</para>

<para>@Example Refer to the example of <link linkend="_tmr2_8h_1a46c13c9255379e99c10240229a145d37">TMR2_Initialize()</link>; </para>
<para>
Definition at line 206 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1a7eccfd0fac278e0099d27631e116cfbf"/>    <section>
    <title>TMR2_Start()</title>
<indexterm><primary>TMR2_Start</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_Start</secondary></indexterm>
<para><computeroutput>void TMR2_Start (void )</computeroutput></para>
<para>@Summary Starts the TMR</para>

<para>@Description This routine starts the TMR</para>

<para>@Param None.</para>

<para>@Returns None</para>

<para>@Example Refer to the example of <link linkend="_tmr2_8h_1a46c13c9255379e99c10240229a145d37">TMR2_Initialize()</link>; </para>
<para>
Definition at line 172 of file tmr2.c.</para>
    </section><anchor xml:id="_tmr2_8h_1a90159f110263038f478f43a3ac9ab3ee"/>    <section>
    <title>TMR2_Stop()</title>
<indexterm><primary>TMR2_Stop</primary><secondary>tmr2.h</secondary></indexterm>
<indexterm><primary>tmr2.h</primary><secondary>TMR2_Stop</secondary></indexterm>
<para><computeroutput>void TMR2_Stop (void )</computeroutput></para>
<para>@Summary Stops the TMR</para>

<para>@Description This routine stops the TMR</para>

<para>@Param None.</para>

<para>@Returns None</para>

<para>@Example Refer to the example of <link linkend="_tmr2_8h_1a46c13c9255379e99c10240229a145d37">TMR2_Initialize()</link>; </para>
<para>
Definition at line 184 of file tmr2.c.</para>
</section>
</section>
</section>
